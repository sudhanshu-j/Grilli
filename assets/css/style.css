/*-----------------------------------*\
  #CUSTOM PROPERTY
\*-----------------------------------*/

:root {
  /**
   * COLORS
   */
  --gold-crayola: hsl(38, 61%, 73%); /* Soft gold color */
  --quick-silver: hsla(0, 0%, 65%, 1); /* Neutral gray */
  --davys-grey: hsla(30, 3%, 34%, 1); /* Dark gray */
  --smoky-black-1: hsla(40, 12%, 5%, 1); /* Very dark brown-black tone */
  --smoky-black-2: hsla(30, 8%, 5%, 1); /* Slightly different dark black */
  --smoky-black-3: hsla(0, 3%, 7%, 1); /* Nearly black */
  --eerie-black-1: hsla(210, 4%, 9%, 1); /* Deep bluish-black */
  --eerie-black-2: hsla(210, 4%, 11%, 1); /* Slightly lighter eerie black */
  --eerie-black-3: hsla(180, 2%, 8%, 1); /* Cool-toned black */
  --eerie-black-4: hsla(0, 0%, 13%, 1); /* Neutral dark gray */
  --white: hsla(0, 0%, 100%, 1); /* Pure white */
  --white-alpha-20: hsla(0, 0%, 100%, 0.2); /* White at 20% opacity */
  --white-alpha-10: hsla(0, 0%, 100%, 0.1); /* White at 10% opacity */
  --black: hsla(0, 0%, 0%, 1); /* Pure black */
  --black-alpha-80: hsla(0, 0%, 0%, 0.8); /* Black at 80% opacity */
  --black-alpha-15: hsla(0, 0%, 0%, 0.15); /* Black at 15% opacity */

  /**
   * GRADIENT COLOR
   */
  --loading-text-gradient: linear-gradient(
    /* Animation gradient for loading text */ 90deg,
    transparent 0% 16.66%,
    var(--smoky-black-3) 33.33% 50%,
    transparent 66.66% 75%
  );
  --gradient-1: linear-gradient(
    /* General dark-to-transparent background gradient */ to top,
    hsla(0, 0%, 0%, 0.9),
    hsla(0, 0%, 0%, 0.7),
    transparent
  );

  /**
   * TYPOGRAPHY
   */
  --fontFamily-forum: "Forum", cursive; /* Decorative serif font */
  --fontFamily-dm_sans: "DM Sans", sans-serif; /* Modern sans-serif font */

  /* Font sizes (responsive scaling using viewport units) */
  --fontSize-display-1: calc(1.3rem + 6.7vw); /* Largest display heading */
  --fontSize-headline-1: calc(2rem + 2.5vw); /* Primary headline */
  --fontSize-headline-2: calc(1.3rem + 2.4vw); /* Secondary headline */
  --fontSize-title-1: calc(1.6rem + 1.2vw); /* Major title */
  --fontSize-title-2: 2.2rem; /* Static size title */
  --fontSize-title-3: 2.1rem;
  --fontSize-title-4: calc(1.6rem + 1.2vw);
  --fontSize-body-1: 2.4rem; /* Large body text */
  --fontSize-body-2: 1.6rem;
  --fontSize-body-3: 1.8rem;
  --fontSize-body-4: 1.6rem; /* Default body text */
  --fontSize-label-1: 1.4rem;
  --fontSize-label-2: 1.2rem;

  /* Font weights */
  --weight-regular: 400; /* Normal weight */
  --weight-bold: 700; /* Bold weight */

  /* Line heights */
  --lineHeight-1: 1em;
  --lineHeight-2: 1.2em;
  --lineHeight-3: 1.5em;
  --lineHeight-4: 1.6em;
  --lineHeight-5: 1.85em; /* Default body line-height */
  --lineHeight-6: 1.4em;

  /* Letter spacing */
  --letterSpacing-1: 0.15em;
  --letterSpacing-2: 0.4em;
  --letterSpacing-3: 0.2em;
  --letterSpacing-4: 0.3em;
  --letterSpacing-5: 3px;

  /**
   * SPACING
   */
  --section-space: 70px; /* Section padding/margin spacing */

  /**
   * SHADOW
   */
  --shadow-1: 0px 0px 25px 0px hsla(0, 0%, 0%, 0.25); /* Subtle box-shadow */

  /**
   * BORDER RADIUS
   */
  --radius-24: 24px; /* Standard round corners */
  --radius-circle: 50%; /* Full circle (for avatars/buttons) */

  /**
   * TRANSITION
   */
  --transition-1: 250ms ease; /* Short transition */
  --transition-2: 500ms ease; /* Medium transition */
  --transition-3: 1000ms ease; /* Long transition */
}

/*-----------------------------------*\
  #RESET
\*-----------------------------------*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Ensures padding and border are included in width/height */
}

li {
  list-style: none; /* Removes bullet points from list items */
}

a,
img,
data,
span,
input,
button,
select,
ion-icon,
textarea {
  display: block; /* Makes inline elements block by default for consistent layout */
}

a {
  color: inherit; /* Inherit parent text color */
  text-decoration: none; /* Removes underline from links */
}

img {
  height: auto; /* Allows image to resize proportionally */
}

input,
button,
select,
textarea {
  background: none; /* Removes default background */
  border: none; /* Removes default border */
  font: inherit; /* Inherit font styles from parent */
}

input,
select,
textarea {
  width: 100%; /* Makes form elements fill the container */
  outline: none; /* Removes focus outline */
}

button {
  cursor: pointer; /* Shows pointer on hover */
}

address {
  font-style: normal; /* Prevents italic style for addresses */
}

html {
  font-size: 10px; /* Base font size: 1rem = 10px */
  scroll-behavior: smooth; /* Smooth scroll for anchor links */
}

body {
  background-color: var(--eerie-black-1); /* Dark background */
  color: var(--white); /* Light text color */
  font-family: var(--fontFamily-dm_sans); /* Main font */
  font-size: var(--fontSize-body-4); /* Base font size */
  font-weight: var(--weight-regular); /* Normal weight */
  line-height: var(--lineHeight-5); /* Readable line spacing */
  overflow: hidden; /* Prevent scroll until loaded */
  height: 300vh; /* Tall page for testing scroll behaviors */
}

body.loaded {
  overflow: overlay; /* Allows scroll when content is ready */
}

body.nav-active {
  overflow: hidden; /* Disables scroll when nav menu is active */
}

::-webkit-scrollbar {
  width: 5px; /* Thin scrollbar */
}

::-webkit-scrollbar-track {
  background-color: transparent; /* Invisible track */
}

::-webkit-scrollbar-thumb {
  background-color: var(--gold-crayola); /* Gold scrollbar thumb */
}

/*-----------------------------------*\
  #TYPOGRAPHY
\*-----------------------------------*/

.display-1,
.headline-1,
.headline-2,
.title-1,
.title-2,
.title-3,
.title-4 {
  color: var(--white); /* White text */
  font-family: var(--fontFamily-forum); /* Decorative cursive font */
  font-weight: var(--weight-regular); /* Regular weight */
  line-height: var(--lineHeight-2); /* Slight line spacing */
}

.display-1 {
  font-size: var(--fontSize-display-1); /* Largest font size for hero text */
  line-height: var(--lineHeight-1); /* Tightest line height */
}

.headline-1 {
  font-size: var(--fontSize-headline-1); /* Large headline size */
}

.headline-2 {
  font-size: var(--fontSize-headline-2); /* Medium headline size */
  line-height: var(--lineHeight-6); /* Slightly looser line height */
}

.title-1 {
  font-size: var(--fontSize-title-1); /* Large title */
}

.title-2 {
  font-size: var(--fontSize-title-2); /* Static title size */
}

.title-3 {
  font-size: var(--fontSize-title-3);
}

.title-4 {
  font-size: var(--fontSize-title-4); /* Responsive title size */
}

.body-1 {
  font-size: var(--fontSize-body-1); /* Large body text */
  line-height: var(--lineHeight-6); /* Comfortable spacing */
}

.body-2 {
  font-size: var(--fontSize-body-2); /* Medium body text */
  line-height: var(--lineHeight-4); /* Medium line height */
}

.body-3 {
  font-size: var(--fontSize-body-3); /* Slightly larger body */
}

.body-4 {
  font-size: var(--fontSize-body-4); /* Default body text */
}

.label-1 {
  font-size: var(--fontSize-label-1); /* Larger label text */
}

.label-2 {
  font-size: var(--fontSize-label-2); /* Smaller label text */
}

/*-----------------------------------*\
  #REUSED STYLE
\*-----------------------------------*/

/* Container with horizontal padding */
.container {
  padding-inline: 16px; /* Adds 16px padding on left and right */
}

/* Small square rotated 45 degrees (diamond shape) with gold border */
.separator {
  width: 8px; /* Width of the square */
  height: 8px; /* Height of the square */
  border: 1px solid var(--gold-crayola); /* Gold colored border */
  transform: rotate(45deg); /* Rotate square 45 degrees to form a diamond */
}

/* Label text for contact section with bold font */
.contact-label {
  font-weight: var(--weight-bold); /* Bold font weight */
}

/* Styling for contact number text */
.contact-number {
  color: var(--gold-crayola); /* Gold text color */
  max-width: max-content; /* Width fits the content */
  margin-inline: auto; /* Center horizontally */
}

/* Utility class for underlined hover effect */
.hover-underline {
  position: relative; /* Establish relative positioning for pseudo element */
  max-width: max-content; /* Width fits content */
}

/* Underline effect element below text */
.hover-underline::after {
  content: ""; /* Empty content to create a pseudo-element */
  position: absolute; /* Positioned relative to parent */
  left: 0; /* Align left edge */
  bottom: 0; /* Align bottom edge */
  width: 100%; /* Full width */
  height: 5px; /* Thickness of underline */
  border-block: 1px solid var(--gold-crayola); /* Top or bottom border with gold color */
  transform: scaleX(0.2); /* Shrink horizontally to 20% */
  opacity: 0; /* Initially invisible */
  transition: var(
    --transition-2
  ); /* Smooth transition on transform and opacity */
}

/* On hover or keyboard focus, show full underline */
.hover-underline:is(:hover, :focus-visible)::after {
  transform: scaleX(1); /* Scale underline to full width */
  opacity: 1; /* Make it visible */
}

/* Adjust pseudo-element bottom position for contact number */
.contact-number::after {
  bottom: -5px; /* Moves the underline 5px below the contact number */
}

/* Center text alignment utility */
.text-center {
  text-align: center; /* Center text horizontally */
}

/* Image fills container and maintains aspect ratio */
.img-cover {
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  object-fit: cover; /* Scale image to cover container without distortion */
}

/* Subtitle style for sections */
.section-subtitle {
  position: relative; /* Relative positioning for potential pseudo elements */
  color: var(--gold-crayola); /* Gold text color */
  font-weight: var(--weight-bold); /* Bold font */
  text-transform: uppercase; /* Uppercase letters */
  letter-spacing: var(--letterSpacing-2); /* Spacing between letters */
  margin-block-end: 12px; /* Margin below subtitle */
}

/* Decorative separator below subtitles */
.section-subtitle::after {
  content: url("../images/separator.svg"); /* Inserts separator image */
  display: block; /* Make pseudo-element a block */
  width: 100px; /* Fixed width for separator */
  margin-inline: auto; /* Center horizontally */
  margin-block-start: 5px; /* Space above separator */
}

/* Base button style */
.btn {
  position: relative; /* For absolute positioned pseudo-elements */
  color: var(--gold-crayola); /* Gold text color */
  font-size: var(--fontSize-label-2); /* Label size font */
  font-weight: var(--weight-bold); /* Bold font */
  text-transform: uppercase; /* Uppercase text */
  letter-spacing: var(--letterSpacing-5); /* Wide letter spacing */
  max-width: max-content; /* Width fits content */
  border: 2px solid var(--gold-crayola); /* Gold border */
  padding: 12px 45px; /* Vertical and horizontal padding */
  overflow: hidden; /* Hide overflow for animations */
  z-index: 1; /* Layer above background effects */
}

/* Button background animation layer */
.btn::before {
  content: ""; /* Empty pseudo element */
  position: absolute; /* Absolute positioning */
  bottom: 100%; /* Start offscreen above */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Adjust to center */
  width: 200%; /* Twice the button width for animation */
  height: 200%; /* Twice the button height */
  border-radius: var(--radius-circle); /* Fully rounded */
  background-color: var(--gold-crayola); /* Gold background */
  transition: var(--transition-2); /* Smooth transition */
  z-index: -1; /* Behind button text */
}

/* Transition for button text */
.btn .text {
  transition: var(--transition-1); /* Quick transition for text */
}

/* Secondary button text, initially offscreen below */
.btn .text-2 {
  position: absolute; /* Positioned absolutely */
  top: 100%; /* Below the visible button */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Center align */
  min-width: max-content; /* Fit text content */
  color: var(--smoky-black-1); /* Dark text color */
}

/* On hover or focus: move background up */
.btn:is(:hover, :focus-visible)::before {
  bottom: -50%; /* Slide background down partially over button */
}

/* On hover/focus: move first text out of view upwards */
.btn:is(:hover, :focus-visible) .text-1 {
  transform: translateY(-40px); /* Move text up by 40px */
}

/* On hover/focus: move second text to visible center */
.btn:is(:hover, :focus-visible) .text-2 {
  top: 50%; /* Center vertically */
  transform: translate(-50%, -50%); /* Perfectly center */
}

/* Secondary button variant */
.btn-secondary {
  background-color: var(--gold-crayola); /* Gold background */
  color: var(--black); /* Black text */
}

/* Secondary button background animation */
.btn-secondary::before {
  background-color: var(--smoky-black-1); /* Dark background */
}

/* Secondary button second text color */
.btn-secondary .text-2 {
  color: var(--white); /* White text */
}

/* Utility for elements with content before/after */
.has-before,
.has-after {
  position: relative; /* Position context */
  z-index: 1; /* Layer above background */
}

/* Before and after pseudo-elements */
.has-before::before,
.has-after::after {
  content: ""; /* Empty content */
  position: absolute; /* Absolute positioning */
}

/* Section wrapper */
.section {
  position: relative; /* For stacking and pseudo-elements */
  padding-block: var(--section-space); /* Vertical padding */
  overflow: hidden; /* Hide overflow */
  z-index: 1; /* Layer above backgrounds */
}

/* Background color utility */
.bg-black-10 {
  background-color: var(--smoky-black-2); /* Dark smoky background */
}

/* Grid list with gap between items */
.grid-list {
  display: grid; /* Use CSS Grid */
  gap: 40px; /* Gap between grid items */
}

/* Utility for shine effect on hover */
.hover\:shine {
  position: relative; /* Context for pseudo-element */
}

/* Shine overlay */
.hover\:shine::after {
  content: ""; /* Empty content */
  position: absolute; /* Positioned over parent */
  top: 0; /* Top edge */
  left: 0; /* Left edge */
  width: 50%; /* Half width */
  height: 100%; /* Full height */
  background-image: linear-gradient(
    to right,
    transparent 0%,
    #fff6 100%
  ); /* White gradient */
  transform: skewX(-0.08turn) translateX(-180%); /* Skew and start off left */
}

/* On hover/focus, move shine overlay across */
.hover\:shine:is(:hover, :focus-within)::after {
  transform: skewX(-0.08turn) translateX(275%); /* Move shine across to right */
  transition: var(--transition-3); /* Slow smooth transition */
}

/* Image container with aspect ratio */
.img-holder {
  aspect-ratio: var(--width) / var(--height); /* Use CSS aspect ratio variable */
  overflow: hidden; /* Crop overflow */
  background-color: var(--eerie-black-4); /* Dark neutral background */
}

/* Button text style */
.btn-text {
  color: var(--gold-crayola); /* Gold text */
  padding-block-end: 4px; /* Padding below text */
  margin-inline: auto; /* Center horizontally */
  text-transform: uppercase; /* Uppercase */
  letter-spacing: var(--letterSpacing-3); /* Moderate letter spacing */
  font-weight: var(--weight-bold); /* Bold */
  transition: var(--transition-1); /* Smooth transition */
}

/* On hover/focus change color to white */
.btn-text:is(:hover, :focus-visible) {
  color: var(--white); /* White text on hover/focus */
}

/* Shape utility */
.shape {
  display: none; /* Hidden by default */
  position: absolute; /* Positioned absolutely */
  max-width: max-content; /* Width fits content */
  z-index: -1; /* Behind main content */
}

/* Utility to set width 100% */
.w-100 {
  width: 100%; /* Full width */
}

/* Utility for vertical floating animation */
.move-anim {
  animation: move 5s linear infinite; /* Infinite animation named 'move' */
}

/* Keyframes for vertical move animation */
@keyframes move {
  0%,
  100% {
    transform: translateY(0); /* Start and end at original position */
  }

  50% {
    transform: translateY(30px); /* Move down 30px at midpoint */
  }
}

/* Utility class for background images */
.has-bg-image {
  background-repeat: no-repeat; /* No repeating */
  background-size: cover; /* Cover entire area */
  background-position: center; /* Center background */
}

/* Input field style */
.input-field {
  background-color: var(--eerie-black-2); /* Dark background */
  color: var(--white); /* White text */
  height: 56px; /* Fixed height */
  padding: 10px 20px; /* Padding inside input */
  border: 1px solid var(--white-alpha-10); /* Thin translucent border */
  margin-block-end: 20px; /* Margin below input */
  outline: none; /* Remove focus outline */
  transition: border-color var(--transition-2); /* Smooth border color transition */
}

/* Placeholder text inherits input color */
.input-field::placeholder {
  color: inherit; /* Same color as input text */
}

/* Border changes on focus */
.input-field:focus {
  border-color: var(--gold-crayola); /* Gold border on focus */
}

/* Wrapper for icons in inputs */
.icon-wrapper {
  position: relative; /* Relative for absolute positioned icons */
  margin-block-end: 20px; /* Margin below */
}

/* Input inside icon wrapper */
.icon-wrapper .input-field {
  margin-block-end: 0; /* Remove bottom margin */
  padding-inline-start: 40px; /* Padding left to make room for icon */
  appearance: none; /* Remove default styling */
  cursor: pointer; /* Cursor pointer */
}

/* Ionicons inside icon wrapper */
.icon-wrapper ion-icon {
  position: absolute; /* Absolute position */
  top: 50%; /* Vertically center */
  transform: translateY(-50%); /* Exact vertical center */
  font-size: 1.4rem; /* Icon size */
  --ionicon-stroke-width: 50px; /* Icon stroke width */
  pointer-events: none; /* Disable mouse interaction */
}

/* First icon positioned to the left */
.icon-wrapper ion-icon:first-child {
  left: 15px; /* 15px from left */
}

/* Last icon positioned to the right */
.icon-wrapper ion-icon:last-child {
  right: 10px; /* 10px from right */
}

/*-----------------------------------*\
  #PRELOAD
\*-----------------------------------*/

.preload {
  position: fixed; /* Fix element relative to viewport */
  top: 0; /* Align to top edge */
  left: 0; /* Align to left edge */
  right: 0; /* Align to right edge */
  bottom: 0; /* Align to bottom edge */
  background-color: var(
    --gold-crayola
  ); /* Background color from CSS variable */
  z-index: 10; /* Stack above most other elements */
  display: grid; /* Use CSS grid layout */
  place-content: center; /* Center content vertically and horizontally */
  justify-items: center; /* Center items horizontally */
  transition: var(--transition-2); /* Smooth transition for properties */
}

.preload > * {
  transition: var(--transition-1); /* Apply transition to all direct children */
}

.preload.loaded > * {
  opacity: 0; /* Fade out children when loaded class is added */
}

.preload.loaded {
  transition-delay: 250ms; /* Delay the transition */
  transform: translateY(100%); /* Slide preload off screen vertically */
}

.circle {
  width: 112px; /* Width of circle loader */
  height: 112px; /* Height of circle loader */
  border-radius: var(
    --radius-circle
  ); /* Make circle using variable for radius */
  border: 3px solid var(--white); /* White solid border */
  border-block-start-color: var(
    --smoky-black-3
  ); /* Different color for top border */
  margin-block-end: 45px; /* Margin below circle */
  animation: rotate360 1s linear infinite; /* Continuous rotation animation */
}

@keyframes rotate360 {
  0% {
    transform: rotate(0); /* Start rotation at 0 degrees */
  }
  100% {
    transform: rotate(1turn); /* Complete one full rotation */
  }
}

.preload .text {
  background-image: var(
    --loading-text-gradient
  ); /* Gradient background for text */
  background-size: 500%; /* Large background for animation */
  font-size: calc(2rem + 3vw); /* Responsive font size */
  font-weight: var(--weight-bold); /* Bold font weight */
  line-height: 1em; /* Tight line height */
  text-transform: uppercase; /* Uppercase letters */
  letter-spacing: 16px; /* Wide letter spacing */
  padding-inline-start: 16px; /* Padding on the left */
  -webkit-text-fill-color: transparent; /* Make text fill transparent for gradient effect */
  background-clip: text; /* Clip background to text */
  -webkit-background-clip: text; /* Safari compatibility for clipping */
  -webkit-text-stroke: 0.5px var(--eerie-black-3); /* Thin black stroke around letters */
  animation: loadingText linear 2s infinite; /* Animate gradient background */
}

@keyframes loadingText {
  0% {
    background-position: 100%; /* Start background gradient from right */
  }
  100% {
    background-position: 0%; /* Animate gradient to the left */
  }
}

/*-----------------------------------*\
  #TOPBAR
\*-----------------------------------*/

.topbar {
  display: none; /* Hide the topbar element */
}

/*-----------------------------------*\
  #HEADER
\*-----------------------------------*/

.header .btn {
  display: none; /* Hide buttons inside header by default */
}

.header {
  position: fixed; /* Fix header to viewport */
  top: 0; /* Align to top */
  left: 0; /* Align to left */
  width: 100%; /* Full width */
  background-color: transparent; /* Transparent background initially */
  padding-block: 40px; /* Vertical padding */
  z-index: 4; /* Layering order */
  border-block-end: 1px solid transparent; /* Transparent bottom border for transition */
  transition: var(--transition-1); /* Smooth transitions */
}

.header.active {
  padding-block: 20px; /* Reduce vertical padding when active */
  background-color: var(--eerie-black-4); /* Change background to dark color */
  border-color: var(--black-alpha-15); /* Change bottom border color */
}

.header.hide {
  transform: translateY(-100%); /* Slide header up to hide */
  transition-delay: 250ms; /* Delay hiding */
}

.header .container {
  padding-inline: 20px; /* Horizontal padding */
  display: flex; /* Use flexbox */
  justify-content: space-between; /* Space between children */
  align-items: center; /* Vertically center children */
  gap: 8px; /* Space between flex items */
}

.nav-open-btn {
  padding: 12px; /* Padding inside nav open button */
  padding-inline-end: 0; /* Remove right padding */
}

.nav-open-btn .line {
  width: 30px; /* Width of each line */
  height: 2px; /* Height of each line */
  background-color: var(--white); /* White color */
  margin-block: 4px; /* Vertical margin */
  transform-origin: left; /* Origin for transform animations */
  animation: menuBtn 400ms ease-in-out alternate infinite; /* Pulsing scale animation */
}

@keyframes menuBtn {
  0% {
    transform: scaleX(1); /* Normal width */
  }
  100% {
    transform: scaleX(0.5); /* Shrink width */
  }
}

.nav-open-btn .line-2 {
  animation-delay: 150ms; /* Delay animation for second line */
}

.nav-open-btn .line-3 {
  animation-delay: 300ms; /* Delay animation for third line */
}

.navbar {
  position: fixed; /* Fixed position for side nav */
  background-color: var(--smoky-black-1); /* Dark background */
  top: 0; /* Align top */
  left: -360px; /* Start hidden offscreen left */
  bottom: 0; /* Full height */
  max-width: 360px; /* Maximum width */
  width: 100%; /* Full width within max */
  padding-inline: 30px; /* Horizontal padding */
  padding-block-end: 50px; /* Bottom padding */
  overflow-y: auto; /* Vertical scrollbar if content overflows */
  visibility: hidden; /* Hidden initially */
  z-index: 2; /* Layering */
  transition: var(--transition-2); /* Smooth slide in/out */
}

.navbar.active {
  visibility: visible; /* Make navbar visible */
  transform: translateX(360px); /* Slide navbar into viewport */
}

.navbar .close-btn {
  color: var(--white); /* White color */
  border: 1px solid currentColor; /* Border same as text color */
  padding: 4px; /* Padding */
  border-radius: var(--radius-circle); /* Rounded circle */
  margin-inline-start: auto; /* Push to right */
  margin-block: 30px 20px; /* Vertical margins */
}

.navbar .close-btn ion-icon {
  --ionicon-stroke-width: 40px; /* Set icon stroke width */
}

.navbar .close-btn:is(:hover, :focus-visible) {
  color: var(--gold-crayola); /* Change color on hover/focus */
}

.navbar .logo {
  max-width: max-content; /* Width to fit content */
  margin-inline: auto; /* Center horizontally */
  margin-block-end: 60px; /* Bottom margin */
}

.navbar-list {
  border-block-end: 1px solid var(--white-alpha-20); /* Bottom border */
  margin-block-end: 100px; /* Bottom margin */
}

.navbar-item {
  border-block-start: 1px solid var(--white-alpha-20); /* Top border for each item */
}

.navbar-link {
  position: relative; /* For pseudo elements */
  font-size: var(--fontSize-label-2); /* Font size from variable */
  text-transform: uppercase; /* Uppercase text */
  padding-block: 10px; /* Vertical padding */
  max-width: unset; /* Remove max-width */
}

.navbar-link::after {
  display: none; /* Hide default after pseudo element */
}

.navbar-link .span {
  transition: var(--transition-1); /* Smooth transition */
}

.navbar-link:is(:hover, :focus-visible, .active) .span {
  color: var(--gold-crayola); /* Change text color */
  transform: translateX(20px); /* Move text right */
}

.navbar-link .separator {
  position: absolute; /* Position relative to navbar link */
  top: 50%; /* Vertically centered */
  left: 0; /* Align left */
  transform: translateY(-50%) rotate(45deg); /* Center and rotate */
  opacity: 0; /* Hidden initially */
  transition: var(--transition-1); /* Smooth transition */
}

.navbar-link:is(:hover, :focus-visible, .active) .separator {
  opacity: 1; /* Show separator on hover/focus/active */
}

.navbar-title {
  margin-block-end: 15px; /* Bottom margin */
}

.navbar-text {
  margin-block: 10px; /* Vertical margin */
}

.navbar .body-4 {
  color: var(--quick-silver); /* Lighter text color */
}

.sidebar-link {
  transition: var(--transition-1); /* Smooth color transition */
}

.sidebar-link:is(:hover, :focus-visible) {
  color: var(--gold-crayola); /* Highlight on hover/focus */
}

.navbar .text-center .separator {
  margin-block: 30px; /* Vertical margins */
  margin-inline: auto; /* Center horizontally */
}

.navbar .contact-label {
  margin-block-end: 10px; /* Bottom margin */
}

.navbar::-webkit-scrollbar-thumb {
  background-color: var(--white-alpha-10); /* Scrollbar thumb color */
}

.overlay {
  position: fixed; /* Fixed position over entire viewport */
  top: 0; /* Align top */
  left: 0; /* Align left */
  bottom: 0; /* Align bottom */
  right: 0; /* Align right */
  background-color: var(--black-alpha-80); /* Semi-transparent black */
  opacity: 0; /* Initially invisible */
  pointer-events: none; /* Ignore pointer events */
  transition: var(--transition-2); /* Smooth fade */
  z-index: 1; /* Layer below navbar */
}

.overlay.active {
  opacity: 1; /* Show overlay */
  pointer-events: all; /* Allow interaction */
}

/*-----------------------------------*\
  #HERO
\*-----------------------------------*/

.hero .slider-btn {
  display: none; /* Hide slider buttons inside hero */
}

.hero {
  position: relative; /* For absolutely positioned children */
  padding-block: 120px; /* Vertical padding top & bottom */
  min-height: 100vh; /* Fill viewport height at minimum */
  overflow: hidden; /* Hide overflow (for animations) */
  z-index: 1; /* Base stacking context */
}

.hero .slider-item {
  position: absolute; /* Positioned relative to .hero */
  top: 50%; /* Vertically center */
  left: 50%; /* Horizontally center */
  transform: translate(-50%, -50%); /* Offset to exact center */
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  display: grid; /* Use grid for centering content */
  place-content: center; /* Center content in both axes */
  padding-block-start: 100px; /* Padding top inside slider item */
  opacity: 0; /* Hidden by default */
  visibility: hidden; /* Prevent interaction when hidden */
  transition: var(--transition-3); /* Smooth opacity/visibility transition */
  z-index: 1; /* Base z-index */
}

.hero .slider-item.active {
  opacity: 1; /* Show active slider */
  visibility: visible;
}

.hero .slider-bg {
  position: absolute; /* Background fills the slider item */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: scale(1.15); /* Slightly scaled up */
  pointer-events: none; /* Prevent interaction */
  user-select: none; /* Prevent text/image selection */
  z-index: -1; /* Behind other slider content */
}

.hero .slider-item.active .slider-bg {
  animation: smoothScale 7s linear forwards; /* Slow scale animation on active slide */
}

@keyframes smoothScale {
  0% {
    transform: scale(1); /* Start scale */
  }
  100% {
    transform: scale(1.15); /* End scale */
  }
}

.hero .section-subtitle::after {
  margin-block: 14px 20px; /* Vertical margin after subtitle */
}

.hero-text {
  margin-block: 10px 40px; /* Vertical margin for hero text */
}

.hero .btn {
  margin-inline: auto; /* Center buttons horizontally */
}

.hero-btn {
  position: absolute; /* Positioned relative to hero */
  bottom: 15px; /* 15px from bottom */
  right: 15px; /* 15px from right */
  z-index: 2; /* Above most hero content */
  background-color: var(--gold-crayola); /* Gold background */
  width: 110px; /* Width */
  height: 110px; /* Height */
  padding: 12px; /* Inner padding */
  transform: scale(0.6); /* Scale down to 60% */
}

.hero-btn img {
  margin-inline: auto; /* Center image horizontally */
  margin-block-end: 6px; /* Margin below image */
}

.hero-btn .span {
  color: var(--black); /* Black text */
  font-weight: var(--weight-bold); /* Bold font */
  text-transform: uppercase; /* Uppercase letters */
  letter-spacing: var(--letterSpacing-1); /* Letter spacing */
  line-height: var(--lineHeight-3); /* Line height */
}

.hero-btn::after {
  inset: 0; /* Fill entire button */
  border: 1px solid var(--gold-crayola); /* Gold border */
  animation: rotate360 15s linear infinite; /* Slow continuous rotation */
}

.slider-reveal {
  transform: translateY(30px); /* Slightly moved down */
  opacity: 0; /* Invisible */
}

.hero .slider-item.active .slider-reveal {
  animation: sliderReveal 1s ease forwards; /* Animate reveal on active slide */
}

@keyframes sliderReveal {
  0% {
    transform: translateY(30px); /* Start slightly below */
    opacity: 0; /* Invisible */
  }
  100% {
    transform: translateY(0); /* End at natural position */
    opacity: 1; /* Fully visible */
  }
}

.hero .slider-item.active .section-subtitle {
  animation-delay: 500ms; /* Delay subtitle reveal */
}

.hero .slider-item.active .hero-title {
  animation-delay: 1000ms; /* Delay title reveal */
}

.hero .slider-item.active .hero-text {
  animation-delay: 1.5s; /* Delay text reveal */
}

.hero .slider-item.active .btn {
  animation-delay: 2s; /* Delay button reveal */
}

/*-----------------------------------*\
  #SERVICE
\*-----------------------------------*/

.service .section-title {
  margin-block-end: 16px; /* Space below section title */
}

.service .section-text {
  margin-block-end: 40px; /* Space below section description */
}

.service-card {
  overflow: hidden; /* Hide overflow for visual effects */
}

.service-card .has-before {
  padding-block: 30px; /* Vertical padding */
  margin-block-end: 26px; /* Bottom margin */
  z-index: 1; /* Stack above pseudo element */
}

.service-card .has-before::before {
  top: 0;
  left: 50%;
  transform: translateX(-50%); /* Center horizontally */
  width: 140px;
  height: 100%;
  background-image: url("../images/img-pattern.svg"); /* Decorative pattern */
  background-position: center;
  background-size: cover;
  background-repeat: repeat;
  transition: var(--transition-2); /* Smooth transition */
  transition-delay: 0;
  z-index: -1; /* Behind content */
  will-change: transform; /* Hint for performance */
}

.service-card:is(:hover, :focus-within) .has-before::before {
  transform: rotateY(0.5turn) translateX(50%); /* Rotate 180 degrees & translate on hover/focus */
  transition-delay: 300ms; /* Delay transition */
}

.service-card .card-banner {
  transition: var(--transition-2); /* Smooth transition */
}

.service-card:is(:hover, :focus-within) .card-banner {
  transform: scale(1.05); /* Slight zoom on hover/focus */
}

.service .card-title {
  margin-block-end: 12px; /* Margin below card titles */
}

/*-----------------------------------*\
  #ABOUT
\*-----------------------------------*/

.about .section-text {
  margin-block: 15px 30px; /* Vertical margin */
}

.about .btn {
  margin-inline: auto; /* Center button horizontally */
  margin-block-start: 26px; /* Space above button */
}

.about .container {
  display: grid; /* Use CSS Grid layout */
  gap: 120px; /* Large gap between grid items */
}

.about-banner {
  position: relative; /* For absolutely positioned children */
  margin-block-end: 120px; /* Bottom margin */
}

.about-banner > .w-100 {
  padding-inline-start: 50px; /* Left padding */
}

.about .abs-img {
  position: absolute; /* Positioned absolutely */
}

.about .abs-img::before {
  z-index: -1; /* Behind content */
}

.about .abs-img-1 {
  bottom: -120px; /* Positioned below container */
  left: 0;
  width: 150px;
  padding-block: 50px;
}

.about .abs-img-2 {
  top: -65px; /* Positioned above container */
  right: 0;
  overflow: hidden; /* Hide overflow */
}

.about .abs-img-1::before {
  top: 0;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 140px;
  background-image: url("../images/img-pattern.svg"); /* Background pattern */
  background-repeat: repeat;
}

.about .abs-img-2::before {
  inset: 0;
  background-image: url("../images/badge-2-bg.png"); /* Badge background */
  background-repeat: no-repeat;
  background-size: contain;
  animation: rotate360 15s linear infinite; /* Slow rotation */
}

/*-----------------------------------*\
  #SPECIAL DISH
\*-----------------------------------*/

.special-dish-content {
  padding-block: 70px; /* Vertical padding */
}

.special-dish .abs-img {
  margin-inline: auto; /* Center absolutely positioned images horizontally */
  margin-block-end: 12px; /* Margin below images */
}

.special-dish .section-text {
  margin-block: 16px 40px; /* Vertical margins */
}

.special-dish-content .wrapper {
  display: flex; /* Flex layout */
  justify-content: center; /* Center items horizontally */
  align-items: center; /* Center items vertically */
  gap: 20px; /* Space between items */
  margin-block-end: 40px; /* Margin below wrapper */
}

.special-dish-content .del {
  text-decoration: none; /* Remove default underline */
  color: var(--davys-grey); /* Grey color for "del" elements */
}

.special-dish-content .span {
  color: var(--gold-crayola); /* Gold color for span */
}

.special-dish .btn {
  margin-inline: auto; /* Center buttons */
}

/*-----------------------------------*\
  #MENU
\*-----------------------------------*/

.menu .section-title {
  margin-block-end: 40px; /* Space below section title */
}

.menu .grid-list {
  margin-block-end: 50px; /* Space below grid list */
}

.menu-card {
  display: flex; /* Flexbox layout for menu cards */
  align-items: flex-start; /* Align items to the top */
  gap: 20px; /* Space between elements inside menu card */
}

/* Utility hover class for cards */
.hover\:card .card-banner {
  background-color: var(--gold-crayola); /* Gold background on banner */
}

.hover\:card .card-banner .img-cover {
  transition: var(--transition-2); /* Smooth transition */
}

.hover\:card:is(:hover, :focus-within) .card-banner .img-cover {
  opacity: 0.7; /* Slightly fade image */
  transform: scale(1.05); /* Slight zoom on hover/focus */
}

.menu-card .card-banner {
  flex-shrink: 0; /* Prevent shrinking */
  border-radius: var(--radius-24); /* Rounded corners */
}

.menu-card .card-title {
  transition: var(--transition-1); /* Smooth color change */
}

.menu-card .card-title:is(:hover, :focus-visible) {
  color: var(--gold-crayola); /* Gold color on hover/focus */
}

.menu-card .badge {
  background-color: var(--gold-crayola); /* Gold badge background */
  color: var(--eerie-black-1); /* Dark text */
  font-family: var(--fontFamily-forum); /* Distinctive font */
  max-width: max-content; /* Shrink to content size */
  line-height: var(--lineHeight-6);
  text-transform: uppercase; /* Uppercase text */
  padding-inline: 10px; /* Horizontal padding */
  margin-block-start: 10px; /* Margin above badge */
}

.menu-card .span {
  color: var(--gold-crayola); /* Gold colored spans */
  margin-block: 10px; /* Vertical spacing */
}

.menu-card .card-text {
  color: var(--quick-silver); /* Light grey text */
  line-height: var(--lineHeight-4);
}

.menu-text .span {
  display: inline-block; /* Allow margin/padding */
  color: var(--gold-crayola);
}

.menu .btn {
  margin-inline: auto; /* Center button horizontally */
  margin-block-start: 26px; /* Margin above button */
}

.menu .shape {
  display: block;
  width: 70%; /* Shapes used decoratively */
}

.menu .shape-2 {
  top: 0;
  left: 0;
}

.menu .shape-3 {
  bottom: 0;
  right: 0;
}

/*-----------------------------------*\
  #TESTIMONIALS
\*-----------------------------------*/

.testi {
  padding-block-end: 340px; /* Big bottom padding */
  position: static; /* Default positioning */
}

.testi .quote {
  font-size: 7rem; /* Very large quote mark */
  font-family: var(--fontFamily-forum); /* Special font */
  line-height: 0.7em; /* Tight line height */
}

.testi .wrapper {
  display: flex; /* Flex container for testimonial controls */
  justify-content: center; /* Center content horizontally */
  gap: 2px; /* Small gap between controls */
  margin-block: 40px 50px; /* Vertical margin */
}

.testi .separator {
  animation: rotate360 15s linear infinite; /* Slow rotating separator */
}

.profile .img {
  margin-inline: auto; /* Center profile images */
  border-radius: var(--radius-circle); /* Circular images */
  margin-block-end: 15px; /* Space below images */
}

.testi .profile-name {
  color: var(--gold-crayola); /* Gold text */
  font-weight: var(--weight-bold); /* Bold font */
  text-transform: uppercase; /* Uppercase */
  letter-spacing: var(--letterSpacing-3); /* Spaced letters */
}

/*-----------------------------------*\
  #RESERVATION
\*-----------------------------------*/

.reservation-form {
  margin-block-start: -270px; /* Negative top margin for overlap */
}

.form-text {
  margin-block-end: 40px; /* Margin below form description */
}

.form-text .link {
  display: inline;
  color: var(--gold-crayola); /* Gold link color */
}

.form-right .headline-1 {
  margin-block-end: 40px; /* Margin below headline */
}

.form-right .contact-label {
  margin-block-end: 5px; /* Margin below labels */
}

.form-right .separator {
  margin: 20px auto; /* Centered separator with vertical margin */
}

.form-right .body-4 {
  color: var(--quick-silver); /* Light grey text */
  line-height: var(--lineHeight-3);
}

.form-right .body-4:not(:last-child) {
  margin-block-end: 25px; /* Space between paragraphs */
}

.form-left,
.form-right {
  padding: 40px 20px 30px; /* Padding inside form sides */
}

.input-field[type="date"] {
  text-transform: uppercase; /* Uppercase date text */
  padding-inline-end: 10px; /* Right padding */
}

/* Hide default calendar picker icon for date input */
.input-field[type="date"]::-webkit-calendar-picker-indicator {
  opacity: 0;
}

textarea.input-field {
  resize: none; /* Disable resizing */
  height: 140px; /* Fixed height */
  padding-block: 20px; /* Vertical padding */
  line-height: var(--lineHeight-1);
}

.form-left .btn {
  max-width: 100%; /* Full width button */
  width: 100%;
}

.form-right {
  background-repeat: repeat;
  background-position: top left;
}

/*-----------------------------------*\
  #FEATURES
\*-----------------------------------*/

.features .section-title {
  margin-block-end: 40px; /* Margin below title */
}

.feature-card {
  padding: 30px 20px 40px; /* Padding inside feature cards */
}

/* Alternate background colors for odd/even cards */
.feature-item:nth-child(2n + 1) .feature-card {
  background-color: var(--eerie-black-3);
}

.feature-item:nth-child(2n) .feature-card {
  background-color: var(--smoky-black-3);
}

.feature-card .card-icon {
  max-width: max-content;
  margin-inline: auto; /* Center icons */
  transition: var(--transition-2);
}

.feature-card:hover .card-icon {
  transform: scale(-1) rotate(180deg); /* Flip icon horizontally and rotate on hover */
}

.feature-card .card-title {
  margin-block: 20px; /* Vertical spacing */
}

.feature-card .card-text {
  color: var(--quick-silver); /* Light grey text */
  line-height: var(--lineHeight-6);
}

/*-----------------------------------*\
  #EVENT
\*-----------------------------------*/

.event .section-title {
  margin-block-end: 40px; /* Margin below title */
}

.event-card {
  position: relative;
  overflow: hidden; /* Hide overflow (for hover effects) */
}

.event-card .card-content {
  background-image: var(--gradient-1); /* Gradient overlay */
  position: absolute;
  bottom: 0; /* Stick to bottom */
  width: 100%;
  padding: 35px 35px 25px;
}

.event-card .publish-date {
  position: absolute;
  top: 30px;
  left: 25px;
  padding: 5px 10px;
  color: var(--gold-crayola); /* Gold text */
  background-color: var(--black);
  font-weight: var(--weight-bold);
  letter-spacing: var(--letterSpacing-1);
  line-height: 14px;
}

.event-card .card-subtitle {
  color: var(--gold-crayola);
  text-transform: uppercase;
  font-weight: var(--weight-bold);
  letter-spacing: var(--letterSpacing-2);
  margin-block-end: 5px;
}

.event-card .card-banner .img-cover {
  transition: var(--transition-2);
}

.event-card:is(:hover, :focus-within) .img-cover {
  transform: scale(1.05); /* Slight zoom on hover/focus */
}

.event .btn {
  margin-inline: auto; /* Center button */
  margin-block-start: 40px; /* Margin above button */
}

/*-----------------------------------*\
  #FOOTER
\*-----------------------------------*/

.footer-top {
  margin-block-end: 70px; /* Space below top footer section */
}

.footer-brand {
  position: relative;
  padding: 50px 40px;
  background: var(--smoky-black-1) url("../images/footer-form-bg.png"); /* Background color + image */
  background-position: center top;
  background-repeat: repeat;
}

/* Decorative vertical side patterns using ::before and ::after */
.footer-brand::before,
.footer-brand::after {
  top: 0;
  width: 15px;
  height: 100%;
  background-image: url("../images/footer-form-pattern.svg");
  position: absolute;
  content: "";
}

.footer-brand::before {
  left: 0;
}

.footer-brand::after {
  right: 0;
}

/* Logo centered horizontally */
.footer-brand .logo {
  max-width: max-content;
  margin-inline: auto;
  margin-block-end: 40px;
}

/* Text inside footer-brand uses light gray and comfortable line height */
.footer-brand :is(.body-4, .label-1) {
  color: var(--quick-silver);
  line-height: var(--lineHeight-3);
}

/* Contact links margin and transition for smooth color change */
.footer-brand .contact-link {
  margin-block: 6px;
  transition: var(--transition-1);
}

.footer-brand .contact-link:is(:hover, :focus-visible) {
  color: var(--gold-crayola); /* Gold on hover/focus */
}

/* Wrapper inside footer-brand with flexbox for layout */
.footer-brand .wrapper {
  display: flex;
  justify-content: center;
  gap: 2px;
  margin-block: 40px 25px;
}

/* Rotating separator animation */
.footer-brand .separator {
  animation: rotate360 15s linear infinite;
}

/* Label styling with margin below */
.footer-brand .label-1 {
  margin-block-end: 30px;
}

.footer-brand .label-1 .span {
  display: inline;
  color: var(--white);
}

/* Input field cursor change inside icon wrapper */
.footer-brand .icon-wrapper .input-field {
  cursor: text;
}

/* Button inside footer-brand spans full width */
.footer-brand .btn {
  min-width: 100%;
}

/* Footer list styled as grid with gaps */
.footer-list {
  display: grid;
  gap: 20px;
}

/* Footer links style with uppercase, bold, spacing */
.footer-link {
  color: var(--quick-silver);
  font-weight: var(--weight-bold);
  text-transform: uppercase;
  letter-spacing: var(--letterSpacing-4);
  margin-inline: auto;
  transition: var(--transition-1);
}

.footer-link:is(:hover, :focus-visible) {
  color: var(--gold-crayola); /* Gold on hover/focus */
}

/* Copyright text light gray */
.copyright {
  color: var(--quick-silver);
  line-height: var(--lineHeight-3);
}

/* Links inside copyright are gold and underlined */
.copyright .link {
  display: inline;
  color: var(--gold-crayola);
  text-decoration: underline;
}

/*-----------------------------------*\
  #BACK TO TOP
\*-----------------------------------*/

.back-top-btn {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: var(--gold-crayola); /* Gold background */
  color: var(--smoky-black-1); /* Dark text */
  font-size: 22px;
  width: 50px;
  height: 50px;
  border-radius: var(--radius-circle); /* Circular button */
  display: grid;
  place-items: center; /* Center icon/text */
  box-shadow: var(--shadow-1);
  transition: var(--transition-1);
  opacity: 0; /* Hidden by default */
  visibility: hidden;
  z-index: 4; /* Above other content */
}

/* Hover and focus states invert colors */
.back-top-btn:is(:hover, :focus-visible) {
  background-color: var(--white);
  color: var(--gold-crayola);
}

/* Active state shows button */
.back-top-btn.active {
  opacity: 1;
  visibility: visible;
}

/*-----------------------------------*\
  #MEDIA QUERIES
\*-----------------------------------*/

/**
 * responsive for larger than 575px screen
 */

@media (min-width: 575px) {
  /* Apply styles for viewport width 575px and above */

  /**
   * CUSTOM PROPERTY
   */

  :root {
    /* Root scope for CSS variables */
    /**
     * typography
     */

    --fontSize-body-2: 2rem; /* Set body-2 font size variable to 2rem */
  }

  /**
   * REUSED STYLE
   */

  :is(.service, .about) .section-text {
    /* Target section-text inside .service or .about */
    max-width: 420px; /* Limit max width for better readability */
    margin-inline: auto; /* Center horizontally */
  }

  .contact-number {
    /* Contact number component */
    --fontSize-body-1: 3rem; /* Override font size variable for body-1 */
  }

  /**
   * TOPBAR
   */

  .topbar {
    /* Topbar container */
    display: block; /* Make it block-level */
    position: fixed; /* Fix to viewport */
    top: 0; /* Stick to top */
    left: 0; /* Align left */
    width: 100%; /* Full width */
    padding-block: 10px; /* Vertical padding 10px top and bottom */
    border-block-end: 1px solid var(--white-alpha-20); /* Bottom border with transparency */
    z-index: 4; /* Layer above other elements */
    transition: var(--transition-1); /* Smooth transition for changes */
  }

  .topbar:has(~ .header.active) {
    /* When sibling .header has class active */
    transform: translateY(-100%); /* Slide topbar off screen upwards */
  }

  .topbar-item:not(.link), /* Select topbar items except links */
  .topbar .separator {
    /* and separators */
    display: none; /* Hide them */
  }

  .topbar .container, /* Container inside topbar */
  .topbar-item {
    /* Each topbar item */
    display: flex; /* Flexbox layout */
    align-items: center; /* Vertically center */
  }

  .topbar .container {
    /* Container inside topbar */
    justify-content: center; /* Center children horizontally */
    gap: 30px; /* Space between children */
  }

  .topbar-item {
    /* Each topbar item */
    gap: 6px; /* Gap between inner elements */
  }

  .topbar-item ion-icon {
    /* Ionicons inside topbar item */
    --ionicon-stroke-width: 60px; /* Set custom stroke width */
  }

  .topbar-item .span {
    /* Span inside topbar item */
    font-size: var(--fontSize-label-1); /* Apply label font size */
  }

  .topbar .link {
    /* Link inside topbar */
    transition: var(--transition-1); /* Smooth transition for interactions */
  }

  .topbar .link:is(:hover, :focus-visible) {
    /* On hover or keyboard focus */
    color: var(--gold-crayola); /* Change color to gold */
  }

  /**
   * HEADER
   */

  .header {
    /* Header container */
    top: 51px; /* Position from top (below topbar) */
  }

  .header.active {
    /* When header is active */
    top: 0; /* Move header to very top */
  }

  .header .btn {
    /* Buttons inside header */
    display: block; /* Display as block */
    margin-inline-start: auto; /* Push button to right (left margin auto) */
  }

  /**
   * HERO
   */

  .hero-btn {
    /* Hero section buttons */
    transform: scale(0.7); /* Scale down to 70% */
  }

  /**
   * SERVICE
   */

  .service .container {
    /* Container inside service section */
    max-width: 420px; /* Limit width */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * ABOUT
   */

  .about .container {
    /* Container inside about section */
    gap: 80px; /* Large gap between children */
  }

  .about-banner > .w-100 {
    /* .w-100 direct child of about-banner */
    padding-inline-start: 90px; /* Left padding 90px */
  }

  .about .abs-img-1 {
    /* Absolutely positioned image 1 inside about */
    width: 285px; /* Set fixed width */
  }

  .about .contact-number {
    /* Contact number inside about */
    --fontSize-body-1: 2.4rem; /* Adjust font size */
  }

  /**
   * MENU
   */

  .menu-card .title-wrapper {
    /* Title wrapper inside menu card */
    display: flex; /* Flex layout */
    justify-content: flex-start; /* Align left */
    align-items: center; /* Vertically center */
    gap: 15px; /* Space between elements */
  }

  .menu-card .badge {
    /* Badge inside menu card */
    margin-block-start: 0; /* Remove top margin */
  }

  .menu-card .span {
    /* Span inside menu card */
    flex-grow: 1; /* Grow to fill available space */
    display: flex; /* Flexbox */
    align-items: center; /* Vertically center */
    gap: 15px; /* Space between children */
    position: relative; /* For positioning ::before pseudo */
  }

  .menu-card .span::before {
    /* Decorative line before span */
    content: ""; /* Empty content */
    height: 6px; /* Height 6px */
    flex-grow: 1; /* Fill available space */
    border-block: 1px solid var(--white-alpha-20); /* Thin horizontal border with transparency */
  }

  /**
   * EVENT
   */

  .event .container {
    /* Container inside event section */
    max-width: 420px; /* Limit width */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * FOOTER
   */

  .footer-brand > * {
    /* Direct children inside footer-brand */
    max-width: 460px; /* Max width */
    margin-inline: auto; /* Center horizontally */
  }

  .footer .input-wrapper {
    /* Input wrapper inside footer */
    position: relative; /* For absolutely positioned children */
  }

  .footer .input-field {
    /* Input fields inside footer */
    margin-block-end: 0; /* Remove bottom margin */
    padding-inline-end: 205px; /* Right padding for button space */
  }

  .footer-brand .btn {
    /* Button inside footer-brand */
    position: absolute; /* Positioned absolutely */
    top: 0; /* Align to top */
    right: 0; /* Align to right */
    bottom: 0; /* Stretch bottom */
    min-width: max-content; /* Minimum width to fit content */
  }
}

/**
 * responsive for larger than 768px screen
 */

@media (min-width: 768px) {
  /* Styles apply for screens 768px wide and up */
  /**
   * REUSED STYLE
   */

  .grid-list {
    /* Elements with class grid-list */
    grid-template-columns: 1fr 1fr; /* Create 2 equal columns grid */
  }

  :is(.service, .event) .container {
    /* Container inside .service or .event sections */
    max-width: 820px; /* Max width of 820px */
  }

  :is(.service, .event) .grid-list li:last-child {
    /* Last list item in grid-list within service or event */
    grid-column: 1 / 3; /* Span across both grid columns */
    width: calc(50% - 20px); /* Set width to half minus 20px */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * HEADER
   */

  .navbar-list {
    /* Navigation bar list */
    margin-inline: 30px; /* Horizontal margin 30px */
  }

  /**
   * HERO
   */

  .hero .slider-btn {
    /* Slider buttons inside hero section */
    display: grid; /* Use grid for centering */
    position: absolute; /* Positioned relative to nearest positioned ancestor */
    z-index: 1; /* Layer above content */
    color: var(--gold-crayola); /* Text/icon color gold */
    font-size: 2.4rem; /* Font size 2.4rem */
    border: 1px solid var(--gold-crayola); /* Gold border */
    width: 45px; /* Fixed width */
    height: 45px; /* Fixed height */
    place-items: center; /* Center content vertically and horizontally */
    top: 50%; /* Vertically center relative to parent */
    transform: translateY(-50%) rotate(45deg); /* Center vertically, rotate 45 degrees */
    transition: var(--transition-1); /* Smooth transition for hover/focus */
  }

  .hero .slider-btn ion-icon {
    /* Ionicons inside slider buttons */
    transform: rotate(
      -45deg
    ); /* Rotate icon -45 degrees to counter parent rotation */
  }

  .hero .slider-btn.prev {
    /* Previous slider button */
    left: 30px; /* Positioned 30px from left */
  }

  .hero .slider-btn.next {
    /* Next slider button */
    right: 30px; /* Positioned 30px from right */
  }

  .hero .slider-btn:is(:hover, :focus-visible) {
    /* On hover or keyboard focus */
    background-color: var(--gold-crayola); /* Gold background */
    color: var(--black); /* Black icon/text */
  }

  /**
   * RESERVATION
   */

  .reservation .input-wrapper {
    /* Wrapper for inputs in reservation */
    display: grid; /* Grid layout */
    grid-template-columns: 1fr 1fr; /* Two equal columns */
    column-gap: 20px; /* Gap between columns */
  }

  .reservation .input-wrapper:nth-child(4) {
    /* The 4th input-wrapper child */
    grid-template-columns: repeat(3, 1fr); /* Three equal columns */
  }

  /**
   * FOOTER
   */

  .footer-brand {
    /* Footer brand section */
    grid-column: 1 / 3; /* Span across 2 columns */
  }
}

/**
 * responsive for larger than 992px screen
 */

@media (min-width: 992px) {
  /* Styles apply for screens 992px wide and up */
  /**
   * CUSTOM PROPERTY
   */

  :root {
    /* Root for CSS variables */
    /**
     * spacing
     */

    --section-space: 100px; /* Define section spacing variable */
  }

  /**
   * REUSED STYLE
   */

  :is(.service, .event) .container {
    /* Container inside service or event */
    max-width: unset; /* Remove max-width to allow full width */
  }

  :is(.service, .event) .grid-list {
    /* Grid list inside service or event */
    grid-template-columns: repeat(3, 1fr); /* 3 equal columns */
  }

  :is(.service, .event) .grid-list li:last-child {
    /* Last list item */
    grid-column: auto; /* Reset grid-column */
    width: 100%; /* Full width */
  }

  /**
   * TOPBAR
   */

  .topbar-item:not(.link) {
    /* Topbar items except links */
    display: flex; /* Show as flex */
  }

  .topbar .item-2 {
    /* Specific item with class item-2 */
    margin-inline-end: auto; /* Push it left by auto margin on right */
  }

  /**
   * SERVICE
   */

  .service .shape {
    /* Shapes inside service section */
    display: block; /* Show block */
  }

  .service .shape-1 {
    /* Shape 1 position */
    bottom: 0; /* Stick to bottom */
    left: 0; /* Stick to left */
  }

  .service .shape-2 {
    /* Shape 2 position */
    top: 0; /* Stick to top */
    right: 0; /* Stick to right */
  }

  /**
   * ABOUT
   */

  .about .container {
    /* Container inside about */
    grid-template-columns: 0.7fr 1fr; /* Two columns, left narrower than right */
    gap: 30px; /* Gap between columns */
  }

  /**
   * SPECIAL DISH
   */

  .special-dish {
    /* Special dish section */
    display: grid; /* Use grid layout */
    grid-template-columns: 1fr 1fr; /* Two equal columns */
    text-align: left; /* Align text left */
  }

  .special-dish-content {
    /* Content area in special dish */
    padding-inline: 50px 25px; /* Left 50px, right 25px padding */
  }

  .special-dish-content .container {
    /* Container inside special dish content */
    position: relative; /* For absolute positioning of children */
  }

  .special-dish .section-subtitle::after, /* Pseudo element after subtitle */
  .special-dish .btn {
    /* Buttons inside special dish */
    margin-inline: 0; /* Remove horizontal margins */
  }

  .special-dish-content .wrapper {
    /* Wrapper inside special dish content */
    justify-content: flex-start; /* Align children to start horizontally */
  }

  .special-dish .abs-img {
    /* Absolutely positioned image in special dish */
    position: absolute; /* Absolute positioning */
    top: 10px; /* 10px from top */
    left: -40px; /* 40px left outside container */
    animation: move 5s linear infinite; /* Continuous move animation */
  }

  /**
   * MENU
   */

  .menu .grid-list {
    /* Grid list inside menu */
    position: relative; /* Position relative for pseudo elements */
    column-gap: 90px; /* Large gap between columns */
  }

  .menu .grid-list::before {
    /* Decorative vertical line before grid list */
    content: ""; /* Empty content */
    position: absolute; /* Absolute positioned */
    top: 0; /* At top */
    left: 50%; /* Center horizontally */
    height: 100%; /* Full height */
    border-inline-start: 1px solid var(--white-alpha-20); /* Thin left border with transparency */
  }

  /**
   * TESTIMONIALS
   */

  .testi-text {
    /* Testimonial text block */
    max-width: 910px; /* Limit max width */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * RESERVATION
   */

  .reservation-form {
    /* Reservation form container */
    display: grid; /* Use grid */
    grid-template-columns: 1fr 0.5fr; /* Two columns: main and smaller */
  }

  /**
   * FOOTER
   */

  .footer .grid-list {
    /* Footer grid list */
    grid-template-columns: 0.45fr 1fr 0.45fr; /* Three columns with side columns smaller */
    align-items: center; /* Vertically center items */
  }

  .footer-brand {
    /* Footer brand section */
    grid-column: auto; /* Reset column span */
    order: 1; /* Display order 1 */
    padding-block: 100px; /* Vertical padding top & bottom 100px */
  }

  .footer-list:last-child {
    /* Last footer list */
    order: 2; /* Display order 2 */
  }
}

/**
 * responsive for larger than 1200px screen
 */

@media (min-width: 1200px) {
  /* Styles apply on screens 1200px wide and above */
  /**
   * CUSTOM PROPERTY
   */

  :root {
    /* Root CSS variables */
    /**
     * typography
     */

    --fontSize-title-2: 2.5rem; /* Define font size for title 2 */
  }

  /**
   * REUSED STYLE
   */

  .container,
  :is(.service, .event) .container {
    /* Container globally and inside .service/.event */
    max-width: 1200px; /* Max width 1200px */
    width: 100%; /* Full width within max */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * TOPBAR
   */

  .topbar .container {
    /* Container inside topbar */
    max-width: unset; /* Remove max-width restriction */
  }

  .topbar .separator {
    /* Separator inside topbar */
    display: block; /* Show as block */
  }

  /**
   * HEADER
   */

  .nav-open-btn,
  .navbar > *:not(.navbar-list),
  .header .overlay {
    /* Hide nav open button, all navbar children except list, and header overlay */
    display: none;
  }

  .header .container {
    /* Container inside header */
    max-width: unset; /* Remove max-width */
  }

  .navbar,
  .navbar.active,
  .navbar-list {
    /* Reset styles on navbar, active navbar and navbar list */
    all: unset; /* Remove all styles */
  }

  .navbar,
  .navbar.active {
    /* Navbar and active navbar */
    margin-inline: auto 20px; /* Horizontal margin: auto left, 20px right */
  }

  .navbar-list {
    /* Navbar list */
    display: flex; /* Display as flex container */
    gap: 30px; /* Space between list items */
  }

  .navbar-item {
    /* Individual navbar items */
    border-block-start: none; /* Remove top border */
  }

  .navbar .separator {
    /* Separator inside navbar */
    display: none; /* Hide separator */
  }

  .navbar-link:is(:hover, :focus-visible, .active) .span {
    /* On hover, focus, or active nav links */
    transform: unset; /* Remove any transform */
  }

  .navbar-link {
    /* Navbar links */
    font-weight: var(--weight-bold); /* Bold font */
    letter-spacing: var(--letterSpacing-1); /* Apply letter spacing */
  }

  .navbar-link::after {
    /* Pseudo element after nav links */
    display: block; /* Show block element */
  }

  .navbar-link.active::after {
    /* For active nav link */
    transform: scaleX(1); /* Scale horizontally to full */
    opacity: 1; /* Fully opaque */
  }

  .header .btn {
    /* Buttons inside header */
    margin-inline-start: 0; /* Remove left margin */
  }

  /**
   * HERO
   */

  .hero {
    /* Hero section */
    height: 880px; /* Fixed height */
  }

  .hero-btn {
    /* Button inside hero */
    bottom: 50px; /* 50px from bottom */
    right: 50px; /* 50px from right */
    transform: scale(1); /* Normal scale */
  }

  /**
   * SERVICE
   */

  .service .grid-list {
    /* Grid list inside service */
    gap: 150px; /* Large gap between grid items */
  }

  .service .grid-list li:nth-child(2n + 1) {
    /* Odd-numbered list items */
    transform: translateY(-160px); /* Move upward by 160px */
  }

  .service .section-text {
    /* Section text inside service */
    margin-block-end: 75px; /* Bottom margin 75px */
  }

  /**
   * ABOUT
   */

  .about {
    /* About section */
    padding-block: 170px 100px; /* Vertical padding: 170px top, 100px bottom */
  }

  /**
   * SPECIAL DISH
   */

  .special-dish-content {
    /* Content inside special dish */
    padding: 225px 120px; /* Padding all sides: 225 top/bottom, 120 left/right */
    padding-inline-end: 0; /* Override right padding to 0 */
  }

  .special-dish-content .container {
    /* Container inside special dish content */
    max-width: 460px; /* Limit max width */
    margin-inline: 0; /* Remove horizontal margins */
  }

  /**
   * MENU
   */

  .menu .grid-list {
    /* Grid list inside menu */
    gap: 55px 200px; /* Gap: 55px row gap, 200px column gap */
    margin-block-end: 55px; /* Bottom margin 55px */
  }

  /**
   * TESTIMONIALS
   */

  .form-left,
  .form-right {
    /* Left and right form sections */
    padding: 75px 60px; /* Padding 75 top/bottom, 60 left/right */
  }

  /**
   * FEATURES
   */

  .features .grid-list {
    /* Grid list inside features */
    grid-template-columns: repeat(4, 1fr); /* 4 equal columns */
  }
}

/**
 * responsive for larger than 1400px screen
 */

@media (min-width: 1400px) {
  /* Styles apply on screens 1400px and wider */
  /**
   * HEADER
   */

  .navbar {
    /* Navbar container */
    margin-inline: auto; /* Center horizontally */
  }

  /**
   * ABOUT
   */

  .about-content {
    /* Content inside about */
    padding-inline-end: 90px; /* Padding right 90px */
  }

  .about .shape {
    /* Shapes inside about section */
    display: block; /* Make visible */
    top: 46%; /* Positioned 46% from top */
    left: 0; /* Positioned at left edge */
  }

  /**
   * SPECIAL DISH
   */

  .special-dish {
    /* Special dish section */
    overflow: visible; /* Show overflow */
    position: relative; /* Position relative for child absolute elements */
  }

  .special-dish .shape {
    /* Shapes inside special dish */
    display: block; /* Show block */
    right: 0; /* Stick to right */
    z-index: 1; /* Layer above content */
  }

  .special-dish .shape-1 {
    /* Specific shape 1 */
    top: 45%; /* Positioned 45% from top */
  }

  .special-dish .shape-2 {
    /* Specific shape 2 */
    bottom: 0; /* Stick to bottom */
    transform: translateY(50%); /* Shift down by 50% of element height */
    width: max-content; /* Width to fit content */
  }

  /**
   * FEATURES
   */

  .features {
    /* Features section */
    overflow: visible; /* Allow overflow */
  }

  .features .shape {
    /* Shapes inside features */
    display: block; /* Show block */
  }

  .features .shape-1 {
    /* Shape 1 in features */
    top: -100px; /* Positioned 100px above container */
    right: 0; /* Stick to right */
  }

  .features .shape-2 {
    /* Shape 2 in features */
    bottom: 80px; /* 80px from bottom */
    left: 0; /* Stick to left */
  }
}
